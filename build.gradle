plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'

}

group = 'com.storelabs.mygage'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // springboot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 로깅 관련 의존성
    implementation 'org.slf4j:slf4j-api'
    implementation 'ch.qos.logback:logback-classic'
}

// Jib 설정
jib {
    from {
        image = 'eclipse-temurin:17-jre-alpine'  // 기본 이미지
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
        }
    }
    to {
        // 도커허브 사용자명/이미지명 형식으로 설정
        image = 'chlee3679/mygage-estimate'
        tags = ['latest', version]  // latest와 버전 태그 함께 설정
    }
    container {
        jvmFlags = ['-Xms512m', '-Xmx512m']  // JVM 메모리 설정
        ports = ['8080']  // 컨테이너 포트
        environment = [
                'SPRING_PROFILES_ACTIVE': 'local',
                'TZ': 'Asia/Seoul'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
